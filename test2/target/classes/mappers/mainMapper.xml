<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace = "kr.co.dong.mainMapper">
  
  
  	<select id = "attenList" resultType="MainDTO">
  		select aId, aDate, aAttend, aReason, aConfirm, aConfirmDate, aDeny, realFileName, userId, userAdmin, userAdminConfirm
  		from attendance, user
        where aAttend not in (0, 1, 7, 8) and aId = userId and aId = userId and aConfirm != 101
  		order by aDate DESC;
  	</select>

  	
  	<select id = "lessonList" resultType="MainDTO">
  	select *
  	from lecture
  	where lecDel = 0
  	order by lectureNum DESC
  	</select>
  	
  	
  	<select id="lessonDetail" parameterType="java.lang.Integer" resultType="MainDTO">
	select lectureName, lectureDateStart, lectureDateEnd, lectureNum, lectureContent, lecDel, 
	(select userName from user, userlecture where userAdmin = 002 and userAdminConfirm = 101 and uId = userId and lectureNum = ulNum) as userName, 
	(select uId from userlecture, user where userAdmin = 002 and userAdminConfirm = 101 and uId = userId and lectureNum = ulNum) as uId
	from lecture
  	where lectureNum = #{lectureNum};
  	
  	</select>
  	
  	<select id="lessonDetail2" resultType="int">
  	select count(*)
  	from lecture
  	where lectureNum = #{lectureNum}
  	</select>
  	
  	<select id="lessonDetail3" resultType="int">
  	select count(*)
  	from user, userlecture
  	where uId = #{uId}
  	and userAdmin = 002
  	and userAdminConfirm = 101
  	and uId = #{userId}
  	and ulNum = #{lectureNum};
  	
  	</select>
  	
  	<update id="lessonUpdate" parameterType="MainDTO">
  	
  	update lecture, userlecture, user
  	set lectureName = #{lectureName}, 
  	lectureContent = #{lectureContent},
  	lectureDateStart = #{lectureDateStart},
  	lectureDateEnd = #{lectureDateEnd},
  	uId = #{userId}
  	where ulNum = #{lectureNum} and uId = #{uId} and lectureNum = #{lectureNum}
  	
  	</update>
  	
  	<insert id="lessonInsert" parameterType="MainDTO">
  	insert into lecture (lectureName, lectureNum, lectureContent, lectureDateStart, lectureDateEnd, lecDel)
  	values (#{lectureName}, #{lectureNum}, #{lectureContent}, #{lectureDateStart}, #{lectureDateEnd}, #{lecDel})
  	 </insert>
  	 
  	 <insert id="lessonInsert2" parameterType="MainDTO"> 
  	 insert into userlecture (uId, ulNum) select userId as uId, lectureNum as ulNum from user, lecture where lectureNum = #{lectureNum} and userId = #{userId}
  	 </insert>
  	 	
  	 
  	 <update id="lessonTeacher" parameterType="MainDTO">
  	 update lecture, userlecture, user set ulNum = #{lectureNum}
  	 where uId = #{uId}
  	 </update>
  	 
  	 <update id="lessonDelete" parameterType="java.lang.Integer">
  	 	update lecture set lecDel = 1
  	 	where lectureNum = #{lectureNum}
  	 </update>
  	 
  	 <select id="attenDetail" resultType="MainDTO">
  	 	select *
  	 	from attendance, user
  	 	where aId = #{aId} and aDate = #{aDate} and aId = userId
  	 </select>
  	 
  	 <update id="attenUpdate" parameterType="MainDTO">
  	 update attendance set aConfirm = 101, aConfirmDate = now(), aDeny = null 
  	 where aId = #{aId} and aDate = #{aDate}
  	 </update>
  	 
  	 <update id="attenDeny" parameterType="MainDTO">
  	 update attendance set aDeny = #{aDeny}, aConfirm = 102
  	 where aId = #{aId} and aDate = #{aDate}
  	 </update>
  	 
  	 <select id="serchList" resultType="MainDTO">
  	 select *
  	 from attendance, user
  	 
  	  <if test='serachField.equals("aId")'>
  		WHERE aId LIKE concat('%', #{serachText}, '%')
 		</if>
 
 		<if test='serachField.equals("aDate")'>
 		 WHERE aDate LIKE concat('%', #{serachText}, '%')
		 </if>
 
 		<if test='serachField.equals("aAttend")'>
 		 WHERE aAttend LIKE concat('%', #{serachText}, '%')
 		</if>
 
		 <if test='serachField.equals("aConfirm")'>
 		 WHERE aConfirm LIKE concat('%', #{serachText}, '%')
		 </if>
		 and aId = userId and aConfirm != 101
		 order by aDate desc

  	 </select>
  	 
  	 <select id="teacherFind" resultType="MainDTO">
  	 select userName, userId from user where userAdmin = 002 and userAdminConfirm = 101;
  	 </select>
  	 
  	 <!-- 0 = 미출석 1 = 출석 2 = 지각 3 = 조퇴 4= 연차 5 = 반차 6 = 결석  -->
  	 <update id="attenDbUpdate" parameterType="MainDTO">
  	 update attendcount set 
  	 
  	 <if test="aAttend == 0">
  	 	abs = abs + 1 where acId = #{aId}
  	 </if>
  	 
  	 <if test="aAttend == 1">
  	 	att = att + 1 where acId = #{aId}
  	 </if>
  	 
  	 <if test="aAttend == 2">
  	 	late = late + 1 where acId = #{aId}
  	 </if>
  	 
  	 <if test="aAttend == 3">
  	 	early = early + 1 where acId = #{aId}
  	 </if>
  	 
  	 <if test="aAttend == 4">
  	 	half = half -2 where acId = #{aId}
  	 </if>
  	 
  	 <if test="aAttend == 5">
  	 	half = half -1 where acId = #{aId}
  	 </if>
  	 
  	 <if test="aAttend == 6">
  	 	abs = abs +1 where acId = #{aId}
  	 </if>
  	
  	 </update>
  	 
  	 <update id="attenAbsCheck">
  	 	update attendcount set abs = case when late = 3 then abs +1 else abs end,
  	 	abs = case when early = 3 then abs +1 else abs end,
		late = case when late = 3 then late = 0 else late end,
		early = case when early = 3 then early = 0 else early end where acId = #{aId}
  	 </update>
  	 
  	 
  	 <update id="attenAnnUpdate">
  	 update attendcount set ann = half div 2 where acId = #{aId}
  	 </update>
  	 
  	 <select id="mlessonRecycleList" resultType="MainDTO">
  	 select * from lecture where lecDel = 1 order by lectureNum ASC
  	 </select>
  	 
  	 <delete id="recycleDelete">
  	 	delete from userlecture where ulNum = #{ulNum};
  	 	delete from lecture where lecDel = 1 and lectureNum = #{lectureNum};
  	 </delete>
  	 
  	   	<update id="lessonRestore">
  		update lecture set lecDel = 0 where lectureNum = #{lectureNum}
  	</update>
  	
  </mapper>