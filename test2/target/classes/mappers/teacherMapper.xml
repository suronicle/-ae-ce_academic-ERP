<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.dong.teacherMapper">


	<select id="lectureList" parameterType="java.lang.String"
		resultType="TeacherDTO">
		select lectureNum, lectureName, lectureContent,
		lectureDateStart, lectureDateEnd
		from lecture, userlecture, user
		where
		userlecture.ulNum=lecture.lectureNum
		AND user.userId = userLecture.uId
		and uId=#{userId}
		and lecDel=0
	</select>

	<!-- 강사 ID + 강의별 학생 목록 전체 정보 -->
	<select id="studentList" parameterType="TeacherDTO"
		resultType="TeacherDTO">
		select userId, userName, userMobile, aDate, aAttend, aName,
		lectureName, aReason
		from user, userlecture, attend, attendance,
		lecture
		where user.userId = userlecture.uId
		AND
		attendance.aId=user.userId
		AND attendance.aAttend=attend.aNum
		AND
		lecture.lectureNum = userlecture.ulNum
		And ulNum=#{lectureNum} and
		userAdmin="001"
		And userId=#{userId}
		AND aLecNum=#{lectureNum}
	</select>



	<!-- 강의별 학생 목록 전체 정보 -->
	<select id="studentManage" parameterType="java.lang.Integer"
		resultType="TeacherDTO">
		select *
		from user, userlecture, lecture
		where
		user.userId=userlecture.uId
		AND userlecture.ulNum = lecture.lectureNum
		AND ulNum=#{lectureNum}
		AND userAdmin="001"

	</select>




	<!-- 강의명 -->
	<select id="lectureName" parameterType="java.lang.Integer"
		resultType="java.lang.String">
		select lectureName
		from lecture
		where
		lectureNum=#{lectureNum}
	</select>


	<!-- 직책 -->
	<select id="adminNumber" parameterType="java.lang.String"
		resultType="java.lang.String">
		select userAdmin
		from user
		where userId=#{userId}
	</select>



	<!-- 강사 정보(강사이름, 강사 전화번호, 이메일) -->
	<select id="userTeacher" parameterType="java.lang.String"
		resultType="TeacherDTO">
		select userName, userMobile, userEmail
		from user , codetable
		where user.userAdmin = codetable.pId
		AND userId = #{userId} AND
		userAdmin="002"
	</select>

	<!-- 강의 별 학생 삭제 -->
	<delete id="studentDelete" parameterType="TeacherDTO">
		DELETE FROM userlecture
		WHERE
		uId = #{userId}
		and ulNum = #{lectureNum}
	</delete>



	<!-- 강의별 학생(1개씩) -->

	<select id="studentListOne" parameterType="java.lang.Integer"
		resultType="TeacherDTO">

		select userId, userName, userMobile
		from user, userlecture
		where user.userId=userlecture.uId
		AND ulNum=#{lectureNum} and
		userAdmin="001";
	</select>

	<!-- 강의별, 학생 아이디 별 정보 -->
	<select id="studentInfo" parameterType="TeacherDTO"
		resultType="TeacherDTO">
		select *
		from user, userlecture
		where
		user.userId=userlecture.uId
		AND ulNum=#{lectureNum} and
		userId=#{userId};
	</select>




	<!-- 학생수 -->
	<select id="studentCount" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		select count(*)
		from userlecture, user
		where user.userId =
		userlecture.uId
		AND ulNum=#{lectureNum} and userAdmin="001";

	</select>




	<!-- 근태계 작성 -->
	<insert id="tAttendRegister" parameterType="TeacherDTO">
		INSERT INTO
		attendance (aId, aDate, aAttend, aReason, aConfirm)
		VALUES
		(#{aId},
		#{aDate}, #{aAttend}, #{aReason}, "100")
	</insert>

	<!-- 근태 조회(전체) -->
	<select id="tAttendList" parameterType="java.lang.String"
		resultType="TeacherDTO">
		select aName, aReason, aDate, pName, aConfirmDate, aDeny
		from attendance, attend, codetable
		where attendance.aAttend =
		attend.aNum
		AND codetable.pId = attendance.aConfirm
		AND aId=#{userId}
		AND aAttend NOT IN(7,8)
		order by aDate desc

	</select>

	<!-- 근태 명 별 조회(전체) -->
	<select id="tAttendSearch" parameterType="TeacherDTO"
		resultType="TeacherDTO">
		select aName, aReason, aDate, pName, aConfirmDate, aDeny
		from attendance,
		attend, codetable
		where attendance.aAttend =
		attend.aNum
		AND
		codetable.pId = attendance.aConfirm
		AND
		aId=#{userId} AND
		aAttend=#{aAttend}
		order by aDate desc
	</select>


	<!-- 근태 조회(승인, 미승인, 빈려) -->
	<select id="tAttendLists" parameterType="TeacherDTO"
		resultType="TeacherDTO">
		select aName, aReason, aDate, pName, aConfirmDate, aDeny
		from attendance, attend, codetable
		where attendance.aAttend =
		attend.aNum
		AND codetable.pId = attendance.aConfirm
		AND aId=#{userId}
		AND aAttend NOT IN(7,8)
		AND pId=#{pId}
		order by aDate desc;

	</select>













	<!-- 연차 조회 -->
	<select id="annCount" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select ann
		from attendcount
		where acId=#{userId};
	</select>

	<!-- 반차 조회 -->
	<select id="halfCount" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select half
		from attendcount
		where acId=#{userId};
	</select>




	<!-- 해당 아이디의 연차, 반차 내용 조회 -->
	<select id="attendOne" parameterType="TeacherDTO"
		resultType="TeacherDTO">
		select aDate, pName, aReason, aName, aAttend
		from
		attendance, codetable, attend
		where attendance.aConfirm = codetable.pId
		AND attend.aNum = attendance.aAttend
		AND aId=#{userId} AND aDate =
		#{aDate};
	</select>

	<!-- 반차, 연차 수정 -->
	<update id="attendSet" parameterType="TeacherDTO">
		update attendance
		set
		aDate=#{aDate}, aReason=#{aReason}, aAttend=#{aAttend}
		where aId=#{aId}
		AND aDate=#{aDate}
	</update>


	<!-- 연차, 반차 삭제 -->
	<delete id="attendDel" parameterType="TeacherDTO">
		DELETE FROM attendance
		WHERE aId = #{aId}
		and aDate = #{aDate}
	</delete>

	<!-- 승인 개수 -->
	<select id="cCount" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*)
		from attendance
		where aId=#{userId} AND
		aConfirm="101"
	</select>

	<!-- 반려 개수 -->
	<select id="dCount" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*)
		from attendance
		where aId=#{userId} AND
		aConfirm="102"
	</select>

	<!-- 미승인 개수 -->
	<select id="nCount" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*)
		from attendance
		where aId=#{userId} AND
		aConfirm="100"
	</select>

	<!-- 날짜 별 학생 출결 정보 리스트 -->
	<select id="sSearchDateList" parameterType="TeacherDTO"
		resultType="TeacherDTO">
		select userId, aDate, aName, aReason
		from user, attend,
		attendance, userlecture
		where user.userId = attendance.aId
		AND
		attend.aNum = attendance.aAttend
		AND user.userId=userlecture.uId
		And
		userAdmin="001" AND ulNum=#{lectureNum}
		AND aDate LIKE concat(#{aDate},'%')
		AND aLecNum=#{lectureNum}
	</select>


	<!-- 날짜 중복 여부 체크 -->
	<select id="aDateCheck" parameterType="TeacherDTO"
		resultType="TeacherDTO">
		SELECT aId, aDate
		FROM attendance
		WHERE aId=#{aId}
		AND
		aDate=#{aDate}
	</select>















</mapper>